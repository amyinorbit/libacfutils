#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2019 Saso Kiselkov. All rights reserved.

GLEW="glew-1.13.0"
GLEW_ARCHIVE="glew-1.13.0.tar.xz"

MAKE_FLAGS_COMMON="GLEW_NO_GLU=-DGLEW_NO_GLU"

# Perl 5.26 removed '.' from the default '@INC' library include paths,
# but our old GLEW's make.pl depends on that behavior. So we need to
# re-enable it.
export PERL_USE_UNSAFE_INC=1

set -e

case $(uname) in
Linux)
	NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
	    | wc -l) + 1 ))
	;;
Darwin)
	NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
	;;
esac

if [[ "$do_clean" == "1" ]]; then
	rm -rf "$GLEW-linux-64"
	rm -rf "$GLEW-mac-64"
    rm -rf "$GLEW-mac-arm"
	rm -rf "$GLEW-win-64"
	exit
fi

function clean_dyn_lib() {
    ARCH="$1"
    
    case $ARCH in
    'linux-64')
        ( cd "$GLEW-$ARCH" && rm -f install/lib/*.so*)
        ;;
    'mac-64')
        ( cd "$GLEW-$ARCH" && rm -f install/lib/*.dylib)
        ;;
    'win-64')
        ( cd "$GLEW-$ARCH" && rm -f install/lib/*.dll)
        ;;
    *)
		echo "Unsupported build platform" >&2
		exit 1
		;;
    esac
}

function do_build() {
    ARCH="$1"
    ADD_MFLAGS="$2"
    ADD_CFLAGS="$3"
    
    
	MAKE_FLAGS="$ADD_MFLAGS GLEW_PREFIX=$(pwd)/$GLEW-$ARCH/install \
	    GLEW_DEST=$(pwd)/$GLEW-$ARCH/install \
	    CFLAGS.CMDLINE=\"-fvisibility=hidden $ADD_CFLAGS\" \
	    LDFLAGS.CMDLINE=\"$ADD_CFLAGS\" \
	    $MAKE_FLAGS_COMMON"
	if ! [ -f "$GLEW-$ARCH/install/lib/libGLEWmx.a" ]; then
		rm -rf "$GLEW-$ARCH" && tar xJf "$GLEW_ARCHIVE" && \
		    mv "$GLEW" "$GLEW-$ARCH" && \
		    cp -r "auto" "$GLEW-$ARCH" && \
		    ( cd "$GLEW-$ARCH" && \
		    patch -p1 < ../opengl_4.6.patch && \
		    patch -p1 < ../cmdline_flags.patch && \
		    patch -p1 < ../ctx_funcs_1.patch && \
		    eval make $MAKE_FLAGS extensions && \
		    patch -p1 < ../ctx_funcs_2.patch && \
		    eval make $MAKE_FLAGS -j $NCPUS glew.lib.mx && \
		    eval make $MAKE_FLAGS install.mx )
	fi
    
}

function make_macOS_fat() {
    PLATFORM="$1"
    PLATFORM_ARM="$2"
    
    OUTDIR_ARM="$(pwd)/$GLEW-$PLATFORM_ARM"
    OUTDIR="$(pwd)/$GLEW-$PLATFORM"
    
    ARCHS=$(lipo -archs $OUTDIR/install/lib/libGLEWmx.a)
    
    # We need to do that in order to replace the arm64 slice if it already exists.
    if [[ "$ARCHS" =~ "arm64" ]]; then
        lipo -remove arm64 "$OUTDIR/install/lib/libGLEWmx.a" \
            -output "$OUTDIR/install/lib/libGLEWmx.a"
    fi
    lipo -create "$OUTDIR_ARM/install/lib/libGLEWmx.a" "$OUTDIR/install/lib/libGLEWmx.a" \
        -output "$OUTDIR/install/lib/libGLEWmx.a"
}

case `uname` in
	Linux)
        (
            do_build "linux-64" "" "" && \
            do_build "win-64" "SYSTEM=linux-mingw64 HOST=x86_64-w64-mingw32" "" && \
            clean_dyn_lib "linux-64" && \
            clean_dyn_lib "win-64"
        )
		;;
	Darwin)
        (
            do_build "mac-64" "" "-mmacosx-version-min=10.9 -arch x86_64" && \
            do_build "mac-arm" "" "-mmacosx-version-min=10.9 -arch arm64" && \
            make_macOS_fat "mac-64" "mac-arm" && \
            clean_dyn_lib "mac-64"
        )
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac
